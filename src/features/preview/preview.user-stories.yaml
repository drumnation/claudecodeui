feature: Live Preview
description: Development server and browser preview for web applications

epics:
  - name: Server Management
    stories:
      - title: Start development server
        as_a: Developer
        i_want_to: Start my project's dev server
        so_that: I can preview my application
        acceptance_criteria:
          - Shows available npm scripts
          - Select script from dropdown
          - Start button begins server
          - Status changes to "starting"
          - Shows loading indicator
          - Displays server URL when ready

      - title: Stop development server
        as_a: Developer
        i_want_to: Stop the running server
        so_that: I can free up resources
        acceptance_criteria:
          - Stop button visible when running
          - Confirms before stopping
          - Status changes to "stopping"
          - Server process terminated
          - Preview frame clears
          - Logs show shutdown message

      - title: Restart development server
        as_a: Developer
        i_want_to: Restart the server quickly
        so_that: I can recover from issues
        acceptance_criteria:
          - Restart button available
          - Stops then starts server
          - Maintains selected script
          - Shows transition states
          - Preserves environment
          - Clears old logs

      - title: Select different script
        as_a: Developer
        i_want_to: Choose which npm script to run
        so_that: I can use different configs
        acceptance_criteria:
          - Dropdown shows all scripts
          - Current script highlighted
          - Can change while stopped
          - Remembers last selection
          - Shows script command
          - Filters dev-like scripts

  - name: Preview Display
    stories:
      - title: View application preview
        as_a: Developer
        i_want_to: See my app in the preview pane
        so_that: I can test without switching windows
        acceptance_criteria:
          - Iframe loads server URL
          - Full viewport height
          - Responsive width
          - Handles redirects
          - Shows loading state
          - Error boundary protection

      - title: Navigate preview pages
        as_a: Developer
        i_want_to: Browse different pages
        so_that: I can test navigation
        acceptance_criteria:
          - URL bar shows current page
          - Can edit URL directly
          - Enter key navigates
          - Updates on iframe navigation
          - Validates URL format
          - Shows loading indicator

      - title: Refresh preview
        as_a: Developer
        i_want_to: Reload the preview page
        so_that: I can reset state or retry
        acceptance_criteria:
          - Refresh button visible
          - Reloads iframe content
          - Maintains current URL
          - Shows loading state
          - Keyboard shortcut (Cmd+R)
          - Clears cache

      - title: Open in external browser
        as_a: Developer
        i_want_to: View in full browser
        so_that: I can test browser features
        acceptance_criteria:
          - External link button
          - Opens system browser
          - Uses current preview URL
          - Works while server running
          - Tooltip shows URL
          - Keyboard shortcut

  - name: Server Monitoring
    stories:
      - title: View server logs
        as_a: Developer
        i_want_to: See server output
        so_that: I can debug issues
        acceptance_criteria:
          - Real-time log streaming
          - Scrollable log area
          - Timestamps on entries
          - Color-coded by type
          - Auto-scrolls to bottom
          - Preserves formatting

      - title: Clear server logs
        as_a: Developer
        i_want_to: Remove old log entries
        so_that: I can focus on new output
        acceptance_criteria:
          - Clear button visible
          - Removes all log entries
          - Confirmation not required
          - Doesn't affect server
          - Shows empty state
          - New logs appear after

      - title: Search server logs
        as_a: Developer
        i_want_to: Find specific log entries
        so_that: I can debug efficiently
        acceptance_criteria:
          - Search input available
          - Filters logs in real-time
          - Highlights matches
          - Case-insensitive search
          - Shows match count
          - Clear search button

  - name: Status Indication
    stories:
      - title: See server status
        as_a: Developer
        i_want_to: Know the server state
        so_that: I can take appropriate action
        acceptance_criteria:
          - Status badge always visible
          - Color indicates state
          - Text describes status
          - Animated during transitions
          - Updates immediately
          - Shows port number

      - title: Handle server errors
        as_a: Developer
        i_want_to: See when server fails
        so_that: I can fix issues
        acceptance_criteria:
          - Error status shown red
          - Error logs highlighted
          - Suggests solutions
          - Can retry start
          - Shows exit code
          - Preserves error logs

  - name: Mobile Experience
    stories:
      - title: Use preview on mobile
        as_a: Mobile developer
        i_want_to: Access preview features on small screens
        so_that: I can work from anywhere
        acceptance_criteria:
          - Responsive layout
          - Collapsible panels
          - Touch-friendly controls
          - Swipe to show/hide logs
          - Full-width preview
          - Close button visible

  - name: Performance
    stories:
      - title: Handle large log output
        as_a: Developer
        i_want_to: View logs without lag
        so_that: I can work efficiently
        acceptance_criteria:
          - Virtualized scrolling
          - Log entry limit (1000)
          - Old entries removed
          - Smooth scrolling
          - No UI freezing
          - Memory efficient

      - title: Quick server startup
        as_a: Developer
        i_want_to: Start server fast
        so_that: I can begin work quickly
        acceptance_criteria:
          - Caches dependencies
          - Shows progress updates
          - Parallel initialization
          - Quick port finding
          - Optimized for HMR
          - Sub-5s typical start